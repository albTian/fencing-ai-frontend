{"id":"najp","dependencies":[{"name":"/Users/alberttian/f21/playground/frontend/live_video/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js.map","includedInParent":true,"mtime":1631991247369},{"name":"/Users/alberttian/f21/playground/frontend/live_video/package.json","includedInParent":true,"mtime":1633056435183},{"name":"/Users/alberttian/f21/playground/frontend/live_video/.babelrc","includedInParent":true,"mtime":1633056216691},{"name":"/Users/alberttian/f21/playground/frontend/live_video/node_modules/@tensorflow/tfjs-backend-webgl/package.json","includedInParent":true,"mtime":1631991247369},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":21},"parent":"/Users/alberttian/f21/playground/frontend/live_video/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js","resolved":"/Users/alberttian/f21/playground/frontend/live_video/node_modules/@tensorflow/tfjs-core/dist/index.js"},{"name":"./gpgpu_math","loc":{"line":18,"column":33},"parent":"/Users/alberttian/f21/playground/frontend/live_video/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js","resolved":"/Users/alberttian/f21/playground/frontend/live_video/node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.DepthwiseConvPacked2DProgram=void 0;var e=require(\"@tensorflow/tfjs-core\"),n=require(\"./gpgpu_math\");class x{constructor(x,t=!1,i=null,s=!1,C=!1){this.variableNames=[\"x\",\"W\"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:\"pads\",type:\"ivec2\"},{name:\"strides\",type:\"ivec2\"},{name:\"dilations\",type:\"ivec2\"},{name:\"inDims\",type:\"ivec2\"}],this.outputShape=x.outShape,this.enableShapeUniforms=(0,n.useShapeUniforms)(this.outputShape.length);const l=x.outChannels/x.inChannels,a=x.padInfo.left,f=x.strideWidth,r=x.dilationWidth,c=x.filterHeight,d=x.filterWidth,o=d;let $=\"\\n      int xR; int xC; int xCOffset;\\n      vec4 wTexel; vec4 previous; vec4 final;\";for(let e=0;e<d;e++)$+=`\\n          vec4 xTexelC${2*e};\\n          int xTexelC${2*e}Ready;\\n          vec4 xTexelC${2*e+1};\\n          int xTexelC${2*e+1}Ready;\\n          vec4 xC${e};`;for(let n=0;n<c;n++){for(let e=0;e<d;e++)$+=`\\n          xTexelC${2*e} = vec4(0.0);\\n          xTexelC${2*e}Ready = 0;\\n          xTexelC${2*e+1} = vec4(0.0);\\n          xTexelC${2*e+1}Ready = 0;\\n          xC${e} = vec4(0.0);`;$+=`\\n        xR = xRCorner + ${n} * dilations[0];\\n        if (xR >=0 && xR < inDims[0]) {\\n      `;for(let x=0;x<(o+1)/2;x++){const t=2*x;if($+=`\\n          xC = xCCorner + ${t*r};\\n          `,1===f){if(t<d&&(a%2==1?($+=`\\n                xCOffset = xC + 1;\\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xCOffset + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n              `,$+=1===r&&t>0?`\\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\\n                `:`\\n                  xCOffset = xC + 1 - 2;\\n\\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\\n                    previous = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we're reading from recycled texture.\\n                    if (xCOffset + 1 >= inDims[1]) {\\n                      previous.zw = vec2(0.0);\\n                    }\\n\\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\\n                  } else {\\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\\n                  }\\n                  `):$+=`\\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                xC${t} = xTexelC${t};\\n                `,t+1<d)){const n=a%2==0?e.util.nearestLargerEven(r):r;r%2==0&&a%2==1||r%2!=0&&a%2!=1?($+=`\\n                  xCOffset = xC + imod(pads[1], 2) + ${n};\\n\\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we're reading from recycled texture.\\n                    if (xCOffset + 1 >= inDims[1]) {\\n                      xTexelC${t+1}.zw = vec2(0.0);\\n                    }\\n                    xTexelC${t+1}Ready = 1;\\n                  }\\n                  `,r>1&&($+=`\\n                    xCOffset -= 2;\\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n                      xTexelC${t}Ready = 1;\\n                    }\\n                    `),$+=`\\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\\n                  `):$+=1===n?`\\n                    xC${t+1} = xTexelC${t};\\n                    `:`\\n                    xCOffset = xC + ${n};\\n\\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\\n                      if (xCOffset + 1 >= inDims[1]) {\\n                        xTexelC${t+1}.zw = vec2(0.0);\\n                      }\\n                      xTexelC${t+1}Ready = 1;\\n                    }\\n\\n                    xC${t+1} = xTexelC${t+1};\\n                    `}}else t<d&&(a%2==1?($+=`\\n                xCOffset = xC + 1 - strides[1];\\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xCOffset + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we're reading from recycled texture.\\n                  if (xC + 2 >= inDims[1]) {\\n                    xTexelC${t+1}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t+1}Ready = 1;\\n                }\\n\\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\\n              `,t+1<d&&($+=`\\n                  final = vec4(0.0);\\n                  xCOffset = xC + 1 + strides[1];\\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\\n                `)):($+=`\\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                xCOffset = xC + strides[1];\\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\\n                  if (xCOffset + 1 >= inDims[1]) {\\n                    xTexelC${t+1}.zw = vec2(0.);\\n                  }\\n                  xTexelC${t+1}Ready = 1;\\n                }\\n\\n                xC${t} = vec4(\\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\\n              `,t+1<d&&($+=`\\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\\n                `)));t<d&&($+=`\\n            wTexel = getW(${n}, ${t}, d1, q);\\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\\n          `,t+1<d&&($+=`\\n              wTexel = getW(${n}, ${t+1}, d1, q);\\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\\n            `))}$+=\"\\n        }\\n      \"}let v=\"\",u=\"\";i&&(v=s?`vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          ${i}\\n        }`:C?`vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          ${i}\\n        }`:`vec4 activation(vec4 x) {\\n          ${i}\\n        }`,u=\"result = activation(result);\");const T=t?\"result += getBiasAtOutCoords();\":\"\";t&&this.variableNames.push(\"bias\"),s&&this.variableNames.push(\"preluActivationWeights\"),C&&this.variableNames.push(\"leakyreluAlpha\"),this.userCode=`\\n      ${v}\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / ${l};\\n        int q = d2 - d1 * ${l};\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\\n        vec4 dotProd = vec4(0.000000000000001);\\n\\n        ${$}\\n\\n        vec4 result = dotProd - vec4(0.000000000000001);\\n        ${T}\\n        ${u}\\n        setOutput(result);\\n      }\\n    `}}exports.DepthwiseConvPacked2DProgram=x;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":0}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":13}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":20}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":35}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":43}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":56}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":57}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":64}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":68}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":76}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":110}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":112}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":116}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":118}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":126}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":151}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":153}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":161}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":1,"column":177}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":183}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":1,"column":185}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":1,"column":197}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":37,"column":41},"generated":{"line":1,"column":199}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":37,"column":51},"generated":{"line":1,"column":202}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":1,"column":204}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":27},"generated":{"line":1,"column":206}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":33},"generated":{"line":1,"column":211}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":38,"column":54},"generated":{"line":1,"column":214}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":1,"column":216}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":39,"column":26},"generated":{"line":1,"column":219}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":222}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":227}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":1,"column":241}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":1,"column":242}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":23,"column":24},"generated":{"line":1,"column":246}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":251}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":256}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":24,"column":17},"generated":{"line":1,"column":270}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":272}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":277}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":25,"column":17},"generated":{"line":1,"column":291}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":1,"column":293}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":1,"column":298}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":29,"column":19},"generated":{"line":1,"column":313}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":1,"column":314}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":5},"generated":{"line":1,"column":315}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":1,"column":320}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":1,"column":327}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":1,"column":332}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":1,"column":341}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":5},"generated":{"line":1,"column":342}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":1,"column":347}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":22},"generated":{"line":1,"column":357}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":31,"column":28},"generated":{"line":1,"column":362}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":1,"column":371}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":32,"column":5},"generated":{"line":1,"column":372}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":32,"column":11},"generated":{"line":1,"column":377}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":32,"column":24},"generated":{"line":1,"column":389}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":32,"column":30},"generated":{"line":1,"column":394}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":1,"column":403}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":5},"generated":{"line":1,"column":404}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":1,"column":409}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":21},"generated":{"line":1,"column":418}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":33,"column":27},"generated":{"line":1,"column":423}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":40,"column":9},"generated":{"line":1,"column":433}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":40,"column":9},"generated":{"line":1,"column":438}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":40,"column":23},"generated":{"line":1,"column":450}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":40,"column":32},"generated":{"line":1,"column":452}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":1,"column":461}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":1,"column":466}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":31},"generated":{"line":1,"column":487}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":48},"generated":{"line":1,"column":489}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":48},"generated":{"line":1,"column":491}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":48},"generated":{"line":1,"column":509}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":53},"generated":{"line":1,"column":514}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":41,"column":65},"generated":{"line":1,"column":526}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":1,"column":534}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":1,"column":540}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":23},"generated":{"line":1,"column":542}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":32},"generated":{"line":1,"column":544}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":46},"generated":{"line":1,"column":556}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":42,"column":55},"generated":{"line":1,"column":558}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":1,"column":569}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":43,"column":20},"generated":{"line":1,"column":571}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":1,"column":573}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":43,"column":37},"generated":{"line":1,"column":581}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":44,"column":10},"generated":{"line":1,"column":586}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":44,"column":24},"generated":{"line":1,"column":588}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":44,"column":33},"generated":{"line":1,"column":590}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":45,"column":10},"generated":{"line":1,"column":602}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":45,"column":26},"generated":{"line":1,"column":604}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":45,"column":35},"generated":{"line":1,"column":606}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":1,"column":620}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":1,"column":622}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":46,"column":34},"generated":{"line":1,"column":624}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":47,"column":10},"generated":{"line":1,"column":637}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":47,"column":24},"generated":{"line":1,"column":639}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":47,"column":33},"generated":{"line":1,"column":641}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":48,"column":10},"generated":{"line":1,"column":653}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":48,"column":25},"generated":{"line":1,"column":655}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":1,"column":657}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":1,"column":661}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":50,"column":19},"generated":{"line":1,"column":663}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":750}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":754}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":13},"generated":{"line":1,"column":758}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":17},"generated":{"line":1,"column":760}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":20},"generated":{"line":1,"column":762}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":24},"generated":{"line":1,"column":764}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":54,"column":37},"generated":{"line":1,"column":766}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":770}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":56,"column":28},"generated":{"line":1,"column":800}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":56,"column":24},"generated":{"line":1,"column":802}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":57,"column":27},"generated":{"line":1,"column":830}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":57,"column":23},"generated":{"line":1,"column":832}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":58,"column":28},"generated":{"line":1,"column":866}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":1,"column":868}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":58,"column":32},"generated":{"line":1,"column":870}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":59,"column":27},"generated":{"line":1,"column":898}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":59,"column":23},"generated":{"line":1,"column":900}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":59,"column":31},"generated":{"line":1,"column":902}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":60,"column":19},"generated":{"line":1,"column":931}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":9},"generated":{"line":1,"column":936}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":9},"generated":{"line":1,"column":940}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":13},"generated":{"line":1,"column":944}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":17},"generated":{"line":1,"column":946}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":20},"generated":{"line":1,"column":948}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":24},"generated":{"line":1,"column":950}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":38},"generated":{"line":1,"column":952}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":71,"column":43},"generated":{"line":1,"column":956}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":72,"column":11},"generated":{"line":1,"column":957}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":72,"column":11},"generated":{"line":1,"column":961}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":72,"column":15},"generated":{"line":1,"column":965}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":72,"column":19},"generated":{"line":1,"column":967}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":72,"column":22},"generated":{"line":1,"column":969}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":72,"column":26},"generated":{"line":1,"column":971}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":72,"column":39},"generated":{"line":1,"column":973}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":1,"column":977}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":74,"column":23},"generated":{"line":1,"column":1002}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":74,"column":19},"generated":{"line":1,"column":1004}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":75,"column":23},"generated":{"line":1,"column":1040}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":75,"column":19},"generated":{"line":1,"column":1042}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":76,"column":23},"generated":{"line":1,"column":1075}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":76,"column":19},"generated":{"line":1,"column":1077}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":76,"column":27},"generated":{"line":1,"column":1079}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":77,"column":23},"generated":{"line":1,"column":1115}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":77,"column":19},"generated":{"line":1,"column":1117}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":77,"column":27},"generated":{"line":1,"column":1119}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":78,"column":14},"generated":{"line":1,"column":1147}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":1,"column":1164}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":81,"column":26},"generated":{"line":1,"column":1196}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":11},"generated":{"line":1,"column":1265}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":11},"generated":{"line":1,"column":1269}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":15},"generated":{"line":1,"column":1273}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":24},"generated":{"line":1,"column":1275}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":27},"generated":{"line":1,"column":1277}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":37},"generated":{"line":1,"column":1280}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":52},"generated":{"line":1,"column":1282}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":57},"generated":{"line":1,"column":1285}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":60},"generated":{"line":1,"column":1287}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":85,"column":70},"generated":{"line":1,"column":1291}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":86,"column":14},"generated":{"line":1,"column":1292}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":86,"column":14},"generated":{"line":1,"column":1298}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":86,"column":34},"generated":{"line":1,"column":1300}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":86,"column":25},"generated":{"line":1,"column":1302}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":92,"column":12},"generated":{"line":1,"column":1304}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":88,"column":8},"generated":{"line":1,"column":1307}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":89,"column":28},"generated":{"line":1,"column":1341}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":89,"column":39},"generated":{"line":1,"column":1343}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":92,"column":28},"generated":{"line":1,"column":1360}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":92,"column":12},"generated":{"line":1,"column":1364}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":93,"column":14},"generated":{"line":1,"column":1367}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":93,"column":14},"generated":{"line":1,"column":1370}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":93,"column":25},"generated":{"line":1,"column":1372}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":95,"column":16},"generated":{"line":1,"column":1376}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":95,"column":26},"generated":{"line":1,"column":1378}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":95,"column":32},"generated":{"line":1,"column":1381}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":105,"column":14},"generated":{"line":1,"column":1384}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":108,"column":18},"generated":{"line":1,"column":1496}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":109,"column":27},"generated":{"line":1,"column":1540}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":114,"column":29},"generated":{"line":1,"column":1788}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":116,"column":27},"generated":{"line":1,"column":1856}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":122,"column":16},"generated":{"line":1,"column":1905}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":121,"column":36},"generated":{"line":1,"column":1908}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":121,"column":18},"generated":{"line":1,"column":1912}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":121,"column":41},"generated":{"line":1,"column":1915}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":121,"column":52},"generated":{"line":1,"column":1917}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":123,"column":20},"generated":{"line":1,"column":1942}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":123,"column":46},"generated":{"line":1,"column":1961}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":123,"column":57},"generated":{"line":1,"column":1963}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":124,"column":20},"generated":{"line":1,"column":1979}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":139,"column":24},"generated":{"line":1,"column":2465}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":139,"column":63},"generated":{"line":1,"column":2497}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":141,"column":24},"generated":{"line":1,"column":2558}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":141,"column":60},"generated":{"line":1,"column":2587}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":147,"column":14},"generated":{"line":1,"column":2638}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":148,"column":58},"generated":{"line":1,"column":2702}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":149,"column":27},"generated":{"line":1,"column":2746}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":151,"column":29},"generated":{"line":1,"column":2852}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":153,"column":27},"generated":{"line":1,"column":2920}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":156,"column":20},"generated":{"line":1,"column":2975}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":156,"column":41},"generated":{"line":1,"column":2989}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":16},"generated":{"line":1,"column":3012}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":27},"generated":{"line":1,"column":3014}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":31},"generated":{"line":1,"column":3016}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":160,"column":44},"generated":{"line":1,"column":3019}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":20},"generated":{"line":1,"column":3020}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":20},"generated":{"line":1,"column":3026}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":38},"generated":{"line":1,"column":3028}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":48},"generated":{"line":1,"column":3030}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":167,"column":54},"generated":{"line":1,"column":3033}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":168,"column":18},"generated":{"line":1,"column":3035}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":168,"column":23},"generated":{"line":1,"column":3037}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":168,"column":23},"generated":{"line":1,"column":3042}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":168,"column":41},"generated":{"line":1,"column":3060}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":169,"column":18},"generated":{"line":1,"column":3063}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":19},"generated":{"line":1,"column":3065}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":35},"generated":{"line":1,"column":3067}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":41},"generated":{"line":1,"column":3070}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":46},"generated":{"line":1,"column":3073}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":56},"generated":{"line":1,"column":3075}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":171,"column":62},"generated":{"line":1,"column":3078}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":172,"column":19},"generated":{"line":1,"column":3081}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":172,"column":35},"generated":{"line":1,"column":3083}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":172,"column":41},"generated":{"line":1,"column":3086}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":172,"column":46},"generated":{"line":1,"column":3089}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":172,"column":56},"generated":{"line":1,"column":3091}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":172,"column":62},"generated":{"line":1,"column":3094}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":173,"column":16},"generated":{"line":1,"column":3097}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":174,"column":55},"generated":{"line":1,"column":3158}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":177,"column":20},"generated":{"line":1,"column":3237}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":177,"column":31},"generated":{"line":1,"column":3239}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":178,"column":29},"generated":{"line":1,"column":3285}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":178,"column":40},"generated":{"line":1,"column":3287}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":183,"column":31},"generated":{"line":1,"column":3543}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":183,"column":42},"generated":{"line":1,"column":3545}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":185,"column":29},"generated":{"line":1,"column":3617}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":185,"column":40},"generated":{"line":1,"column":3619}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":191,"column":20},"generated":{"line":1,"column":3674}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":191,"column":36},"generated":{"line":1,"column":3676}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":192,"column":18},"generated":{"line":1,"column":3680}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":195,"column":22},"generated":{"line":1,"column":3796}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":196,"column":31},"generated":{"line":1,"column":3844}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":197,"column":31},"generated":{"line":1,"column":3912}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":202,"column":16},"generated":{"line":1,"column":3972}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":203,"column":22},"generated":{"line":1,"column":4000}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":203,"column":33},"generated":{"line":1,"column":4002}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":203,"column":52},"generated":{"line":1,"column":4021}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":204,"column":20},"generated":{"line":1,"column":4037}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":204,"column":31},"generated":{"line":1,"column":4039}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":211,"column":18},"generated":{"line":1,"column":4069}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":210,"column":40},"generated":{"line":1,"column":4072}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":210,"column":20},"generated":{"line":1,"column":4076}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":212,"column":24},"generated":{"line":1,"column":4105}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":212,"column":35},"generated":{"line":1,"column":4107}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":212,"column":49},"generated":{"line":1,"column":4121}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":216,"column":38},"generated":{"line":1,"column":4189}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":219,"column":22},"generated":{"line":1,"column":4270}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":219,"column":33},"generated":{"line":1,"column":4272}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":220,"column":31},"generated":{"line":1,"column":4320}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":220,"column":42},"generated":{"line":1,"column":4322}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":222,"column":33},"generated":{"line":1,"column":4448}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":222,"column":44},"generated":{"line":1,"column":4450}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":224,"column":31},"generated":{"line":1,"column":4526}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":224,"column":42},"generated":{"line":1,"column":4528}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":227,"column":24},"generated":{"line":1,"column":4591}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":227,"column":35},"generated":{"line":1,"column":4593}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":227,"column":49},"generated":{"line":1,"column":4607}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":227,"column":60},"generated":{"line":1,"column":4609}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":234,"column":14},"generated":{"line":1,"column":4642}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":234,"column":25},"generated":{"line":1,"column":4644}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":242,"column":16},"generated":{"line":1,"column":4648}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":242,"column":26},"generated":{"line":1,"column":4650}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":242,"column":32},"generated":{"line":1,"column":4653}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":243,"column":14},"generated":{"line":1,"column":4656}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":246,"column":18},"generated":{"line":1,"column":4780}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":247,"column":27},"generated":{"line":1,"column":4824}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":251,"column":29},"generated":{"line":1,"column":5070}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":253,"column":27},"generated":{"line":1,"column":5138}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":257,"column":18},"generated":{"line":1,"column":5238}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":257,"column":29},"generated":{"line":1,"column":5240}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":258,"column":27},"generated":{"line":1,"column":5284}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":258,"column":38},"generated":{"line":1,"column":5286}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":262,"column":29},"generated":{"line":1,"column":5524}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":262,"column":40},"generated":{"line":1,"column":5526}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":264,"column":27},"generated":{"line":1,"column":5594}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":264,"column":38},"generated":{"line":1,"column":5596}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":267,"column":20},"generated":{"line":1,"column":5651}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":267,"column":46},"generated":{"line":1,"column":5670}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":268,"column":18},"generated":{"line":1,"column":5686}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":268,"column":29},"generated":{"line":1,"column":5688}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":271,"column":18},"generated":{"line":1,"column":5713}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":271,"column":29},"generated":{"line":1,"column":5715}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":271,"column":33},"generated":{"line":1,"column":5717}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":272,"column":16},"generated":{"line":1,"column":5721}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":278,"column":22},"generated":{"line":1,"column":5982}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":278,"column":33},"generated":{"line":1,"column":5984}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":278,"column":52},"generated":{"line":1,"column":6003}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":278,"column":63},"generated":{"line":1,"column":6005}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":282,"column":14},"generated":{"line":1,"column":6045}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":283,"column":57},"generated":{"line":1,"column":6108}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":284,"column":27},"generated":{"line":1,"column":6152}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":286,"column":29},"generated":{"line":1,"column":6258}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":288,"column":27},"generated":{"line":1,"column":6326}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":293,"column":18},"generated":{"line":1,"column":6475}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":293,"column":29},"generated":{"line":1,"column":6477}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":294,"column":27},"generated":{"line":1,"column":6521}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":294,"column":38},"generated":{"line":1,"column":6523}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":296,"column":29},"generated":{"line":1,"column":6641}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":296,"column":40},"generated":{"line":1,"column":6643}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":298,"column":27},"generated":{"line":1,"column":6710}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":298,"column":38},"generated":{"line":1,"column":6712}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":301,"column":20},"generated":{"line":1,"column":6767}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":302,"column":27},"generated":{"line":1,"column":6806}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":302,"column":50},"generated":{"line":1,"column":6822}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":302,"column":61},"generated":{"line":1,"column":6824}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":305,"column":18},"generated":{"line":1,"column":6849}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":305,"column":29},"generated":{"line":1,"column":6851}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":305,"column":33},"generated":{"line":1,"column":6853}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":306,"column":16},"generated":{"line":1,"column":6857}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":307,"column":22},"generated":{"line":1,"column":6885}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":307,"column":33},"generated":{"line":1,"column":6887}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":307,"column":52},"generated":{"line":1,"column":6906}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":308,"column":20},"generated":{"line":1,"column":6922}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":308,"column":31},"generated":{"line":1,"column":6924}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":319,"column":12},"generated":{"line":1,"column":6954}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":319,"column":23},"generated":{"line":1,"column":6956}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":320,"column":10},"generated":{"line":1,"column":6960}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":321,"column":28},"generated":{"line":1,"column":6994}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":321,"column":34},"generated":{"line":1,"column":7000}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":322,"column":27},"generated":{"line":1,"column":7040}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":325,"column":14},"generated":{"line":1,"column":7086}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":325,"column":25},"generated":{"line":1,"column":7088}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":325,"column":29},"generated":{"line":1,"column":7090}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":326,"column":12},"generated":{"line":1,"column":7094}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":327,"column":30},"generated":{"line":1,"column":7130}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":327,"column":36},"generated":{"line":1,"column":7136}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":327,"column":47},"generated":{"line":1,"column":7138}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":328,"column":29},"generated":{"line":1,"column":7180}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":328,"column":40},"generated":{"line":1,"column":7182}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":333,"column":6},"generated":{"line":1,"column":7232}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":333,"column":18},"generated":{"line":1,"column":7235}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":338,"column":8},"generated":{"line":1,"column":7257}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":338,"column":8},"generated":{"line":1,"column":7261}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":338,"column":28},"generated":{"line":1,"column":7263}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":338,"column":32},"generated":{"line":1,"column":7266}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":338,"column":57},"generated":{"line":1,"column":7268}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":339,"column":8},"generated":{"line":1,"column":7271}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":341,"column":8},"generated":{"line":1,"column":7275}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":340,"column":10},"generated":{"line":1,"column":7277}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":343,"column":12},"generated":{"line":1,"column":7379}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":345,"column":17},"generated":{"line":1,"column":7394}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":348,"column":12},"generated":{"line":1,"column":7488}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":352,"column":12},"generated":{"line":1,"column":7543}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":356,"column":6},"generated":{"line":1,"column":7558}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":356,"column":31},"generated":{"line":1,"column":7560}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":359,"column":10},"generated":{"line":1,"column":7592}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":359,"column":10},"generated":{"line":1,"column":7598}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":359,"column":27},"generated":{"line":1,"column":7600}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":359,"column":37},"generated":{"line":1,"column":7602}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":359,"column":73},"generated":{"line":1,"column":7636}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":360,"column":8},"generated":{"line":1,"column":7639}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":361,"column":11},"generated":{"line":1,"column":7642}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":361,"column":11},"generated":{"line":1,"column":7647}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":361,"column":25},"generated":{"line":1,"column":7661}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":361,"column":30},"generated":{"line":1,"column":7666}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":364,"column":8},"generated":{"line":1,"column":7674}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":365,"column":11},"generated":{"line":1,"column":7677}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":365,"column":11},"generated":{"line":1,"column":7682}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":365,"column":25},"generated":{"line":1,"column":7696}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":365,"column":30},"generated":{"line":1,"column":7701}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":367,"column":8},"generated":{"line":1,"column":7727}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":368,"column":11},"generated":{"line":1,"column":7730}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":368,"column":11},"generated":{"line":1,"column":7735}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":368,"column":25},"generated":{"line":1,"column":7749}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":368,"column":30},"generated":{"line":1,"column":7754}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":371,"column":9},"generated":{"line":1,"column":7772}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":371,"column":9},"generated":{"line":1,"column":7777}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":372,"column":8},"generated":{"line":1,"column":7797}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":379,"column":24},"generated":{"line":1,"column":8005}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":380,"column":28},"generated":{"line":1,"column":8038}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":387,"column":10},"generated":{"line":1,"column":8265}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":390,"column":10},"generated":{"line":1,"column":8339}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":391,"column":10},"generated":{"line":1,"column":8353}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":8401}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":8409}},{"source":"../src/conv_packed_gpu_depthwise.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":1,"column":8438}}],"sources":{"../src/conv_packed_gpu_depthwise.ts":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, util} from '@tensorflow/tfjs-core';\n\nimport {GPGPUProgram, useShapeUniforms} from './gpgpu_math';\n\nexport class DepthwiseConvPacked2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  packedInputs = true;\n  packedOutput = true;\n  outputShape: number[];\n  userCode: string;\n  enableShapeUniforms: boolean;\n  customUniforms = [\n    {name: 'pads', type: 'ivec2' as const },\n    {name: 'strides', type: 'ivec2' as const },\n    {name: 'dilations', type: 'ivec2' as const },\n    {name: 'inDims', type: 'ivec2' as const },\n  ];\n\n  constructor(\n      convInfo: backend_util.Conv2DInfo, addBias = false,\n      activation: string = null, hasPreluActivation = false,\n      hasLeakyReluAlpha = false) {\n    this.outputShape = convInfo.outShape;\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n    const padLeft = convInfo.padInfo.left;\n    const strideWidth = convInfo.strideWidth;\n    const dilationWidth = convInfo.dilationWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const texelsAcross = filterWidth;\n\n    let mainLoop = `\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;`;\n\n    for (let c = 0; c < filterWidth; c++) {\n      mainLoop += `\n          vec4 xTexelC${c * 2};\n          int xTexelC${c * 2}Ready;\n          vec4 xTexelC${c * 2 + 1};\n          int xTexelC${c * 2 + 1}Ready;\n          vec4 xC${c};`;\n    }\n\n    /**\n     * This vectorized implementation works by gathering the values needed for\n     * each output channel's dot product into vec4's and then multiplying them\n     * all together (this happens in the final double for-loop below). Most of\n     * the main loop consists of constructing these vec4's with the minimum\n     * number of texture2D calls, which means making use of all four returned\n     * values from a texture2D call at once.\n     */\n    for (let r = 0; r < filterHeight; r++) {\n      for (let c = 0; c < filterWidth; c++) {\n        mainLoop += `\n          xTexelC${c * 2} = vec4(0.0);\n          xTexelC${c * 2}Ready = 0;\n          xTexelC${c * 2 + 1} = vec4(0.0);\n          xTexelC${c * 2 + 1}Ready = 0;\n          xC${c} = vec4(0.0);`;\n      }\n      mainLoop += `\n        xR = xRCorner + ${r} * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      `;\n\n      for (let texelC = 0; texelC < (texelsAcross + 1) / 2; texelC++) {\n        const colIndex = texelC * 2;\n\n        mainLoop += `\n          xC = xCCorner + ${colIndex * dilationWidth};\n          `;\n\n        if (strideWidth === 1) {\n          if (colIndex < filterWidth) {\n            // If padding is odd, the outer texels have to be composed.\n            if (padLeft % 2 === 1) {\n              // TODO: Ensure vec4 previous does not result in redundant sample,\n              // and avoid setting xTexelRC's that exceed the boundary in the\n              // first place rather than resetting them to vec4(0)).\n\n              // To compute xCOffset:\n              // - If padding is odd, we must add 1 to ensure we ask for an\n              // even-numbered row.\n              // - We subtract 2 to access the previous texel.\n\n              mainLoop += `\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${\n                  colIndex}Ready == 0) {\n                  xTexelC${colIndex} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${colIndex}.zw = vec2(0.0);\n                  }\n                  xTexelC${colIndex}Ready = 1;\n                }\n              `;\n              // This texel has been read in previous iteration if the dilation\n              // is 1.\n              if (dilationWidth === 1 && colIndex > 0) {\n                mainLoop += `\n                xC${colIndex} = vec4(xTexelC${colIndex - 2}.zw, xTexelC${\n                    colIndex}.xy);\n                `;\n              } else {\n                mainLoop += `\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${colIndex} = vec4(previous.zw, xTexelC${colIndex}.xy);\n                  } else {\n                    xC${colIndex} = vec4(0.0, 0.0, xTexelC${colIndex}.xy);\n                  }\n                  `;\n              }\n            } else {\n              // Padding is even, so xRC corresponds to a single texel.\n              mainLoop += `\n                if (xC >= 0 && xC < inDims[1] && xTexelC${colIndex}Ready == 0) {\n                  xTexelC${colIndex} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${colIndex}.zw = vec2(0.0);\n                  }\n                  xTexelC${colIndex}Ready = 1;\n                }\n\n                xC${colIndex} = xTexelC${colIndex};\n                `;\n            }\n\n            if (colIndex + 1 < filterWidth) {\n              // If dilation is even, the second entry should match the first\n              // (either both are composed or both are single samples). But if\n              // dilation is odd, then the second entry should be the opposite\n              // of the first (if the first is composed, the second is a single\n              // sample, and vice versa.)\n\n              const nextTexelOffset = padLeft % 2 === 0 ?\n                  util.nearestLargerEven(dilationWidth) :\n                  dilationWidth;\n\n              if ((dilationWidth % 2 === 0 && padLeft % 2 === 1) ||\n                  (dilationWidth % 2 !== 0 && padLeft % 2 !== 1)) {\n                mainLoop += `\n                  xCOffset = xC + imod(pads[1], 2) + ${nextTexelOffset};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${\n                    colIndex + 1}Ready == 0) {\n                    xTexelC${colIndex + 1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${colIndex + 1}.zw = vec2(0.0);\n                    }\n                    xTexelC${colIndex + 1}Ready = 1;\n                  }\n                  `;\n\n                // If dilation > 1 then the xRC's will not be able to share any\n                // values, so each xRC will require two unique calls to getX.\n                if (dilationWidth > 1) {\n                  mainLoop += `\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${\n                      colIndex}Ready == 0) {\n                      xTexelC${colIndex} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${colIndex}Ready = 1;\n                    }\n                    `;\n                }\n\n                mainLoop += `\n                  xC${colIndex + 1} = vec4(xTexelC${colIndex}.zw, xTexelC${\n                    colIndex + 1}.xy);\n                  `;\n              } else {\n                // If dilation is 1 and padding is odd, we have already read the\n                // texel when constructing the previous x value. Here we can\n                // simply skip the texture read.\n                if (nextTexelOffset === 1) {\n                  mainLoop += `\n                    xC${colIndex + 1} = xTexelC${colIndex};\n                    `;\n                } else {\n                  mainLoop += `\n                    xCOffset = xC + ${nextTexelOffset};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${\n                      colIndex + 1}Ready == 0) {\n                      xTexelC${colIndex + 1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${colIndex + 1}.zw = vec2(0.0);\n                      }\n                      xTexelC${colIndex + 1}Ready = 1;\n                    }\n\n                    xC${colIndex + 1} = xTexelC${colIndex + 1};\n                    `;\n                }\n              }\n            }\n          }\n        } else {  // stride === 2\n          if (colIndex < filterWidth) {\n            // Depending on whether padLeft is even or odd, we want either the\n            // xy or zw channels from X texels for xC${colIndex}. If padLeft is\n            // even, xC${colIndex +1} is simply the zw channels of texels we've\n            // already sampled. But if padLeft is odd, xC{$c + 1}.zw will\n            // need to come from the xy channels of a new texel, hence the `\n            // vec4\n            // final` initialized below.\n            if (padLeft % 2 === 1) {\n              mainLoop += `\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${\n                  colIndex}Ready == 0) {\n                  xTexelC${colIndex} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${colIndex}.zw = vec2(0.0);\n                  }\n                  xTexelC${colIndex}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${\n                  colIndex + 1}Ready == 0) {\n                  xTexelC${colIndex + 1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${colIndex + 1}.zw = vec2(0.0);\n                  }\n                  xTexelC${colIndex + 1}Ready = 1;\n                }\n\n                xC${colIndex} = vec4(xTexelC${colIndex}.zw, xTexelC${\n                  colIndex + 1}.zw);\n              `;\n\n              if (colIndex + 1 < filterWidth) {\n                mainLoop += `\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${colIndex + 1} = vec4(xTexelC${colIndex + 1}.xy, final.xy);\n                `;\n              }\n            } else {\n              mainLoop += `\n                if(xC >= 0 && xC < inDims[1] && xTexelC${colIndex}Ready == 0) {\n                  xTexelC${colIndex} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${colIndex}.zw = vec2(0.0);\n                  }\n                  xTexelC${colIndex}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${\n                  colIndex + 1}Ready == 0) {\n                  xTexelC${colIndex + 1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${colIndex + 1}.zw = vec2(0.);\n                  }\n                  xTexelC${colIndex + 1}Ready = 1;\n                }\n\n                xC${colIndex} = vec4(\n                  xTexelC${colIndex}.xy, xTexelC${colIndex + 1}.xy);\n              `;\n\n              if (colIndex + 1 < filterWidth) {\n                mainLoop += `\n                  xC${colIndex + 1} = vec4(xTexelC${colIndex}.zw, xTexelC${\n                    colIndex + 1}.zw);\n                `;\n              }\n            }\n          }\n        }\n\n        // localize the dotProd accumulation within the loop, the theory is for\n        // GPU with limited cache, accumulate sum across large amount of\n        // veriables will cause lots of cache misses. (i.e. 5x5 filter will have\n        // 50 variables)\n        if (colIndex < filterWidth) {\n          mainLoop += `\n            wTexel = getW(${r}, ${colIndex}, d1, q);\n            dotProd += xC${colIndex} * vec4(wTexel.xz, wTexel.xz);\n          `;\n\n          if (colIndex + 1 < filterWidth) {\n            mainLoop += `\n              wTexel = getW(${r}, ${colIndex + 1}, d1, q);\n              dotProd += xC${colIndex + 1} * vec4(wTexel.xz, wTexel.xz);\n            `;\n          }\n        }\n      }\n      mainLoop += `\n        }\n      `;\n    }\n\n    let activationSnippet = '', applyActivationSnippet = '';\n    if (activation) {\n      if (hasPreluActivation) {\n        activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n      } else if (hasLeakyReluAlpha) {\n        activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n      } else {\n        activationSnippet = `vec4 activation(vec4 x) {\n          ${activation}\n        }`;\n      }\n\n      applyActivationSnippet = `result = activation(result);`;\n    }\n\n    const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n    if (addBias) {\n      this.variableNames.push('bias');\n    }\n\n    if (hasPreluActivation) {\n      this.variableNames.push('preluActivationWeights');\n    }\n    if (hasLeakyReluAlpha) {\n      this.variableNames.push('leakyreluAlpha');\n    }\n\n    this.userCode = `\n      ${activationSnippet}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${channelMul};\n        int q = d2 - d1 * ${channelMul};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${mainLoop}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"e63a4a8e327e99b23b8076045874fe23","cacheData":{"env":{}}}