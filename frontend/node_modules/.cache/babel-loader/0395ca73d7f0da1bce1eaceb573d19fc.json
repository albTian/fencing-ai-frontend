{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nvar addImplCPU = shared.addImpl,\n    bincountImplCPU = shared.bincountImpl,\n    bincountReduceImplCPU = shared.bincountReduceImpl,\n    ceilImplCPU = shared.ceilImpl,\n    concatImplCPU = shared.concatImpl,\n    equalImplCPU = shared.equalImpl,\n    expImplCPU = shared.expImpl,\n    expm1ImplCPU = shared.expm1Impl,\n    floorImplCPU = shared.floorImpl,\n    gatherNdImplCPU = shared.gatherNdImpl,\n    gatherV2ImplCPU = shared.gatherV2Impl,\n    greaterImplCPU = shared.greaterImpl,\n    greaterEqualImplCPU = shared.greaterEqualImpl,\n    lessImplCPU = shared.lessImpl,\n    lessEqualImplCPU = shared.lessEqualImpl,\n    linSpaceImplCPU = shared.linSpaceImpl,\n    logImplCPU = shared.logImpl,\n    maxImplCPU = shared.maxImpl,\n    maximumImplCPU = shared.maximumImpl,\n    minimumImplCPU = shared.minimumImpl,\n    multiplyImplCPU = shared.multiplyImpl,\n    negImplCPU = shared.negImpl,\n    notEqualImplCPU = shared.notEqualImpl,\n    prodImplCPU = shared.prodImpl,\n    rangeImplCPU = shared.rangeImpl,\n    rsqrtImplCPU = shared.rsqrtImpl,\n    sigmoidImplCPU = shared.sigmoidImpl,\n    simpleAbsImplCPU = shared.simpleAbsImpl,\n    sliceImplCPU = shared.sliceImpl,\n    sparseFillEmptyRowsImplCPU = shared.sparseFillEmptyRowsImpl,\n    sparseReshapeImplCPU = shared.sparseReshapeImpl,\n    sparseSegmentReductionImplCPU = shared.sparseSegmentReductionImpl,\n    sqrtImplCPU = shared.sqrtImpl,\n    stridedSliceImplCPU = shared.stridedSliceImpl,\n    stringNGramsImplCPU = shared.stringNGramsImpl,\n    stringSplitImplCPU = shared.stringSplitImpl,\n    stringToHashBucketFastImplCPU = shared.stringToHashBucketFastImpl,\n    subImplCPU = shared.subImpl,\n    tileImplCPU = shared.tileImpl,\n    topKImplCPU = shared.topKImpl,\n    transposeImplCPU = shared.transposeImpl,\n    uniqueImplCPU = shared.uniqueImpl;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, equalImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherNdImplCPU, gatherV2ImplCPU, greaterEqualImplCPU, greaterImplCPU, lessEqualImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, notEqualImplCPU, prodImplCPU, sigmoidImplCPU, simpleAbsImplCPU, sliceImplCPU, sparseFillEmptyRowsImplCPU, sparseReshapeImplCPU, sparseSegmentReductionImplCPU, sqrtImplCPU, stridedSliceImplCPU, stringNGramsImplCPU, stringSplitImplCPU, stringToHashBucketFastImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","map":{"version":3,"sources":["../../src/kernel_utils/shared.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAEH;AACA;AACA;AACA,OAAO,KAAK,MAAZ,MAAwB,0CAAxB;IASW,U,GA0CP,M,CA1CF,O;IACc,e,GAyCZ,M,CAzCF,Y;IACoB,qB,GAwClB,M,CAxCF,kB;IACU,W,GAuCR,M,CAvCF,Q;IACY,a,GAsCV,M,CAtCF,U;IACW,Y,GAqCT,M,CArCF,S;IACS,U,GAoCP,M,CApCF,O;IACW,Y,GAmCT,M,CAnCF,S;IACW,Y,GAkCT,M,CAlCF,S;IACc,e,GAiCZ,M,CAjCF,Y;IACc,e,GAgCZ,M,CAhCF,Y;IACa,c,GA+BX,M,CA/BF,W;IACkB,mB,GA8BhB,M,CA9BF,gB;IACU,W,GA6BR,M,CA7BF,Q;IACe,gB,GA4Bb,M,CA5BF,a;IACc,e,GA2BZ,M,CA3BF,Y;IACS,U,GA0BP,M,CA1BF,O;IACS,U,GAyBP,M,CAzBF,O;IACa,c,GAwBX,M,CAxBF,W;IACa,c,GAuBX,M,CAvBF,W;IACc,e,GAsBZ,M,CAtBF,Y;IACS,U,GAqBP,M,CArBF,O;IACc,e,GAoBZ,M,CApBF,Y;IACU,W,GAmBR,M,CAnBF,Q;IACW,Y,GAkBT,M,CAlBF,S;IACW,Y,GAiBT,M,CAjBF,S;IACa,c,GAgBX,M,CAhBF,W;IACe,gB,GAeb,M,CAfF,a;IACW,Y,GAcT,M,CAdF,S;IACyB,0B,GAavB,M,CAbF,uB;IACmB,oB,GAYjB,M,CAZF,iB;IAC4B,6B,GAW1B,M,CAXF,0B;IACU,W,GAUR,M,CAVF,Q;IACkB,mB,GAShB,M,CATF,gB;IACkB,mB,GAQhB,M,CARF,gB;IACiB,kB,GAOf,M,CAPF,e;IAC4B,6B,GAM1B,M,CANF,0B;IACS,U,GAKP,M,CALF,O;IACU,W,GAIR,M,CAJF,Q;IACU,W,GAGR,M,CAHF,Q;IACe,gB,GAEb,M,CAFF,a;IACY,a,GACV,M,CADF,U;AAGF,SACE,UADF,EAEE,eAFF,EAGE,qBAHF,EAIE,WAJF,EAKE,aALF,EAME,YANF,EAOE,UAPF,EAQE,YARF,EASE,YATF,EAUE,eAVF,EAWE,eAXF,EAYE,mBAZF,EAaE,cAbF,EAcE,gBAdF,EAeE,WAfF,EAgBE,eAhBF,EAiBE,UAjBF,EAkBE,UAlBF,EAmBE,cAnBF,EAoBE,cApBF,EAqBE,eArBF,EAsBE,UAtBF,EAuBE,eAvBF,EAwBE,WAxBF,EAyBE,cAzBF,EA0BE,gBA1BF,EA2BE,YA3BF,EA4BE,0BA5BF,EA6BE,oBA7BF,EA8BE,6BA9BF,EA+BE,WA/BF,EAgCE,mBAhCF,EAiCE,mBAjCF,EAkCE,kBAlCF,EAmCE,6BAnCF,EAoCE,UApCF,EAqCE,YArCF,EAsCE,YAtCF,EAuCE,WAvCF,EAwCE,WAxCF,EAyCE,gBAzCF,EA0CE,aA1CF","sourcesContent":["\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleBinaryKernelImpl} from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleUnaryImpl} from '@tensorflow/tfjs-backend-cpu/dist/utils/unary_types';\n\nexport type SimpleBinaryKernelImplCPU = SimpleBinaryKernelImpl;\nexport type SimpleUnaryKernelImplCPU = SimpleUnaryImpl;\nconst {\n  addImpl: addImplCPU,\n  bincountImpl: bincountImplCPU,\n  bincountReduceImpl: bincountReduceImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  equalImpl: equalImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  gatherNdImpl: gatherNdImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterImpl: greaterImplCPU,\n  greaterEqualImpl: greaterEqualImplCPU,\n  lessImpl: lessImplCPU,\n  lessEqualImpl: lessEqualImplCPU,\n  linSpaceImpl: linSpaceImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  notEqualImpl: notEqualImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  sigmoidImpl: sigmoidImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU,\n  sparseReshapeImpl: sparseReshapeImplCPU,\n  sparseSegmentReductionImpl: sparseSegmentReductionImplCPU,\n  sqrtImpl: sqrtImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  stringNGramsImpl: stringNGramsImplCPU,\n  stringSplitImpl: stringSplitImplCPU,\n  stringToHashBucketFastImpl: stringToHashBucketFastImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU,\n} = shared;\n\nexport {\n  addImplCPU,\n  bincountImplCPU,\n  bincountReduceImplCPU,\n  ceilImplCPU,\n  concatImplCPU,\n  equalImplCPU,\n  expImplCPU,\n  expm1ImplCPU,\n  floorImplCPU,\n  gatherNdImplCPU,\n  gatherV2ImplCPU,\n  greaterEqualImplCPU,\n  greaterImplCPU,\n  lessEqualImplCPU,\n  lessImplCPU,\n  linSpaceImplCPU,\n  logImplCPU,\n  maxImplCPU,\n  maximumImplCPU,\n  minimumImplCPU,\n  multiplyImplCPU,\n  negImplCPU,\n  notEqualImplCPU,\n  prodImplCPU,\n  sigmoidImplCPU,\n  simpleAbsImplCPU,\n  sliceImplCPU,\n  sparseFillEmptyRowsImplCPU,\n  sparseReshapeImplCPU,\n  sparseSegmentReductionImplCPU,\n  sqrtImplCPU,\n  stridedSliceImplCPU,\n  stringNGramsImplCPU,\n  stringSplitImplCPU,\n  stringToHashBucketFastImplCPU,\n  subImplCPU,\n  rangeImplCPU,\n  rsqrtImplCPU,\n  tileImplCPU,\n  topKImplCPU,\n  transposeImplCPU,\n  uniqueImplCPU,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}