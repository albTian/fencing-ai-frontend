{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\n\nENV.registerFlag( // This typed array passed in to WebAssembly.validate is WebAssembly binary\n// code. In this case it is a small program that contains SIMD\n// instructions.\n'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11])));\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\n\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)); // This typed array is a WebAssembly program containing threaded\n    // instructions.\n\n    return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n});","map":{"version":3,"sources":["../src/flags_wasm.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,GAAR,QAAkB,uBAAlB;AAEA,MAAM,GAAG,GAAG,GAAG,EAAf;AAEA;;AAEG;AACH;;AACA,GAAG,CAAC,YAAJ,EACI;AACA;AACA;AACA,uBAJJ,EAI6B,YAAY,WAAW,CAAC,QAAZ,CAAqB,IAAI,UAAJ,CAAe,CACvE,CADuE,EACpE,EADoE,EAChE,GADgE,EAC3D,GAD2D,EACtD,CADsD,EACnD,CADmD,EAChD,CADgD,EAC7C,CAD6C,EAC1C,CAD0C,EACtC,CADsC,EACnC,CADmC,EAC9B,EAD8B,EAC1B,CAD0B,EACtB,CADsB,EACnB,CADmB,EAEvE,CAFuE,EAEpE,CAFoE,EAEhE,CAFgE,EAE3D,EAF2D,EAEtD,CAFsD,EAEnD,CAFmD,EAEhD,CAFgD,EAE7C,CAF6C,EAE1C,EAF0C,EAEtC,CAFsC,EAEnC,GAFmC,EAE9B,EAF8B,EAE1B,EAF0B,EAEtB,EAFsB,CAAf,CAArB,CAJzC;AASA;;AAEG;AACH;;AACA,GAAG,CAAC,YAAJ,CAAiB,8BAAjB,EAAiD,YAAW;AAC1D;AACA;AACA,MAAI,GAAG,CAAC,GAAJ,CAAQ,SAAR,CAAJ,EAAwB;AACtB,WAAO,KAAP;AACD;;AAED,MAAI;AACF;AACA;AACA,QAAI,cAAJ,GAAqB,KAArB,CAA2B,WAA3B,CAAuC,IAAI,iBAAJ,CAAsB,CAAtB,CAAvC,EAHE,CAIF;AACA;;AACA,WAAO,WAAW,CAAC,QAAZ,CAAqB,IAAI,UAAJ,CAAe,CACzC,CADyC,EACtC,EADsC,EAClC,GADkC,EAC7B,GAD6B,EACxB,CADwB,EACrB,CADqB,EACjB,CADiB,EACb,CADa,EACV,CADU,EACP,CADO,EACJ,CADI,EACA,EADA,EACI,CADJ,EACS,CADT,EACa,CADb,EACgB,CADhB,EACmB,CADnB,EACuB,CADvB,EAC0B,CAD1B,EAEzC,CAFyC,EAEtC,CAFsC,EAElC,CAFkC,EAE7B,CAF6B,EAExB,CAFwB,EAErB,EAFqB,EAEjB,EAFiB,EAEb,CAFa,EAEV,CAFU,EAEP,CAFO,EAEJ,EAFI,EAEA,CAFA,EAEI,GAFJ,EAES,EAFT,EAEa,CAFb,EAEgB,CAFhB,EAEmB,EAFnB,EAEuB,EAFvB,CAAf,CAArB,CAAP;AAID,GAVD,CAUE,OAAO,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CApBD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ])));\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}