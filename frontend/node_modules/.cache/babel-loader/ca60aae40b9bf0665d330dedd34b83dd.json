{"ast":null,"code":"import _slicedToArray from \"/Users/alberttian/f21/playground/frontend/fencing-ai-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { RotateProgram } from '../rotate_gpu';\nexport var rotateWithOffsetConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'webgl',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        attrs = _ref.attrs,\n        backend = _ref.backend;\n    var image = inputs.image;\n    var radians = attrs.radians,\n        fillValue = attrs.fillValue,\n        center = attrs.center;\n    var webglBackend = backend;\n    var program = new RotateProgram(image.shape, fillValue);\n\n    var _backend_util$getImag = backend_util.getImageCenter(center, image.shape[1], image.shape[2]),\n        _backend_util$getImag2 = _slicedToArray(_backend_util$getImag, 2),\n        centerX = _backend_util$getImag2[0],\n        centerY = _backend_util$getImag2[1];\n\n    var customValues = [[centerX, centerY, Math.sin(radians), Math.cos(radians)]];\n    var output = webglBackend.runWebGLProgram(program, [image], image.dtype, customValues);\n    return output;\n  }\n};","map":{"version":3,"sources":["../../src/kernels/RotateWithOffset.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,QAAmD,uBAAnD;AACA,SAAQ,gBAAR,QAA8E,uBAA9E;AAGA,SAAQ,aAAR,QAA4B,eAA5B;AAEA,OAAO,IAAM,sBAAsB,GAAiB;AAClD,EAAA,UAAU,EAAE,gBADsC;AAElD,EAAA,WAAW,EAAE,OAFqC;AAGlD,EAAA,UAAU,EAAE,0BAA6B;AAAA,QAA3B,MAA2B,QAA3B,MAA2B;AAAA,QAAnB,KAAmB,QAAnB,KAAmB;AAAA,QAAZ,OAAY,QAAZ,OAAY;AAAA,QAChC,KADgC,GACvB,MADuB,CAChC,KADgC;AAAA,QAEhC,OAFgC,GAEF,KAFE,CAEhC,OAFgC;AAAA,QAEvB,SAFuB,GAEF,KAFE,CAEvB,SAFuB;AAAA,QAEZ,MAFY,GAEF,KAFE,CAEZ,MAFY;AAGvC,QAAM,YAAY,GAAG,OAArB;AAEA,QAAM,OAAO,GAAG,IAAI,aAAJ,CAAmB,KAAkB,CAAC,KAAtC,EAA6C,SAA7C,CAAhB;;AALuC,gCAOnC,YAAY,CAAC,cAAb,CAA4B,MAA5B,EAAoC,KAAK,CAAC,KAAN,CAAY,CAAZ,CAApC,EAAoD,KAAK,CAAC,KAAN,CAAY,CAAZ,CAApD,CAPmC;AAAA;AAAA,QAMhC,OANgC;AAAA,QAMvB,OANuB;;AAQvC,QAAM,YAAY,GACd,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmB,IAAI,CAAC,GAAL,CAAS,OAAT,CAAnB,EAAsC,IAAI,CAAC,GAAL,CAAS,OAAT,CAAtC,CAAD,CADJ;AAEA,QAAM,MAAM,GAAG,YAAY,CAAC,eAAb,CACX,OADW,EACF,CAAC,KAAD,CADE,EACO,KAAK,CAAC,KADb,EACoB,YADpB,CAAf;AAEA,WAAO,MAAP;AACD;AAhBiD,CAA7C","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, Tensor4D} from '@tensorflow/tfjs-core';\nimport {RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {RotateProgram} from '../rotate_gpu';\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'webgl',\n  kernelFunc: ({inputs, attrs, backend}) => {\n    const {image} = inputs as RotateWithOffsetInputs;\n    const {radians, fillValue, center} = attrs as {} as RotateWithOffsetAttrs;\n    const webglBackend = backend as MathBackendWebGL;\n\n    const program = new RotateProgram((image as Tensor4D).shape, fillValue);\n    const [centerX, centerY] =\n        backend_util.getImageCenter(center, image.shape[1], image.shape[2]);\n    const customValues =\n        [[centerX, centerY, Math.sin(radians), Math.cos(radians)]];\n    const output = webglBackend.runWebGLProgram(\n        program, [image], image.dtype, customValues);\n    return output;\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}